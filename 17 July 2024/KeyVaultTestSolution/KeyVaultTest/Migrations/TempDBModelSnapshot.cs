// <auto-generated />
using KeyVaultTest.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KeyVaultTest.Migrations
{
    [DbContext(typeof(TempDB))]
    partial class TempDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KeyVaultTest.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Name = "Product A",
                            PictureURL = "https://vbucket.blob.core.windows.net/product-img/1.jpg",
                            Price = 100m
                        },
                        new
                        {
                            ProductID = 2,
                            Name = "Product B",
                            PictureURL = "https://vbucket.blob.core.windows.net/product-img/2.jfif",
                            Price = 200m
                        },
                        new
                        {
                            ProductID = 3,
                            Name = "Product C",
                            PictureURL = "https://vbucket.blob.core.windows.net/product-img/3.jfif",
                            Price = 300m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
